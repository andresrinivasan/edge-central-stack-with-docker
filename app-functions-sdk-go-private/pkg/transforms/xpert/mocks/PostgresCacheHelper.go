// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	dtos "github.com/edgexfoundry/go-mod-core-contracts/v2/dtos"
	mock "github.com/stretchr/testify/mock"
)

// PostgresCacheHelper is an autogenerated mock type for the PostgresCacheHelper type
type PostgresCacheHelper struct {
	mock.Mock
}

// GetResourceId provides a mock function with given fields: reading, tags
func (_m *PostgresCacheHelper) GetResourceId(reading dtos.BaseReading, tags map[string]interface{}) (int32, error) {
	ret := _m.Called(reading, tags)

	var r0 int32
	if rf, ok := ret.Get(0).(func(dtos.BaseReading, map[string]interface{}) int32); ok {
		r0 = rf(reading, tags)
	} else {
		r0 = ret.Get(0).(int32)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(dtos.BaseReading, map[string]interface{}) error); ok {
		r1 = rf(reading, tags)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetValueTypeId provides a mock function with given fields: reading
func (_m *PostgresCacheHelper) GetValueTypeId(reading dtos.BaseReading) (int16, error) {
	ret := _m.Called(reading)

	var r0 int16
	if rf, ok := ret.Get(0).(func(dtos.BaseReading) int16); ok {
		r0 = rf(reading)
	} else {
		r0 = ret.Get(0).(int16)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(dtos.BaseReading) error); ok {
		r1 = rf(reading)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
